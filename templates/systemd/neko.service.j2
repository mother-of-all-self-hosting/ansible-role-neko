{#
SPDX-FileCopyrightText: 2023 Slavi Pantaleev
SPDX-FileCopyrightText: 2024 Julian-Samuel GebÃ¼hr
SPDX-FileCopyrightText: 2025 Suguru Hirahara

SPDX-License-Identifier: AGPL-3.0-or-later
#}

[Unit]
Description=Neko virtual browser ({{ neko_identifier }})
{% for service in neko_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
{% for service in neko_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ neko_identifier }} 2>/dev/null || true'
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ neko_identifier }} 2>/dev/null || true'

{#
  --cap-add=SYS_ADMIN is required for the Chromium-based browsers available for Neko
  See: https://neko.m1k1o.net/docs/v3/installation/docker-images#chromium-based-browsers
#}
ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} create \
      --rm \
      --name={{ neko_identifier }} \
      --log-driver=none \
      --network={{ neko_container_network }} \
      {% if neko_container_image_app in ['chromium', 'google-chrome', 'ungoogled-chromium', 'microsoft-edge', 'brave', 'vivaldi', 'opera'] %}
      --cap-add=SYS_ADMIN \
      --shm-size=2g \
      {% endif %}
      -p {{ neko_environment_variables_neko_webrtc_epr }}:{{ neko_environment_variables_neko_webrtc_epr }}/udp \
      {% if neko_container_http_host_bind_port %}
      -p {{ neko_container_http_host_bind_port }}:{{ neko_container_http_port }} \
      {% endif %}
      --env-file={{ neko_base_path }}/env \
      --label-file={{ neko_base_path }}/labels \
      {% for volume in neko_container_additional_volumes %}
      --mount type={{ volume.type | default('bind' if '/' in volume.src else 'volume') }},src={{ volume.src }},dst={{ volume.dst }}{{ (',' + volume.options) if volume.options else '' }} \
      {% endfor %}
      --tmpfs=/tmp:rw,noexec,nosuid,size=100m \
      {{ neko_container_image_self_build_name if neko_container_image_self_build else neko_container_image }}

{% for network in neko_container_additional_networks %}
ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} network connect {{ network }} {{ neko_identifier }}
{% endfor %}

ExecStart={{ devture_systemd_docker_base_host_command_docker }} start --attach {{ neko_identifier }}

ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ neko_identifier }} 2>/dev/null || true'
ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ neko_identifier }} 2>/dev/null || true'

Restart=always
RestartSec=30
SyslogIdentifier={{ neko_identifier }}

[Install]
WantedBy=multi-user.target
